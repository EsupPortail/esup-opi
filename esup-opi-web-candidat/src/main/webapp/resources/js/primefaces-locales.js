PrimeFaces.locales ['fr'] = {
    closeText: 'Fermer',
    prevText: 'Précédent',
    nextText: 'Suivant',
    monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre' ],
    monthNamesShort: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jun', 'Jul', 'Aoû', 'Sep', 'Oct', 'Nov', 'Déc' ],
    dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
    dayNamesShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
    weekHeader: 'Semaine',
    firstDay: 1,
    isRTL: false,
    showMonthAfterYear: false,
    yearSuffix:'',
    timeOnlyTitle: 'Choisir l\'heure',
    timeText: 'Heure',
    hourText: 'Heures',
    minuteText: 'Minutes',
    secondText: 'Secondes',
    currentText: 'Maintenant',
    ampm: false,
    month: 'Mois',
    week: 'Semaine',
    day: 'Jour',
    allDayText: 'Toute la journée',
    messages: {
        'javax.faces.component.UIInput.REQUIRED': '{0} est obligatoire.',
        'javax.faces.converter.IntegerConverter.INTEGER': '{2}: \'{0}\' doit est un nombre composé d\'un ou plusieurs chiffres.',
        'javax.faces.converter.IntegerConverter.INTEGER_detail': '{2}: \'{0}\' doit être un nombre entre -2147483648 et 2147483647 Exemple: {1}',
        'javax.faces.converter.DoubleConverter.DOUBLE': '{2}: \'{0}\' doit est un nombre composé d\'un ou plusieurs chiffres.',
        'javax.faces.converter.DoubleConverter.DOUBLE_detail': '{2}: \'{0}\' doit être un nombre entre 4.9E-324 et 1.7976931348623157E308  Exemple: {1}',
        'javax.faces.converter.BigDecimalConverter.DECIMAL': '{2}: \'{0}\' doit être un nombre décimal signé.',
        'javax.faces.converter.BigDecimalConverter.DECIMAL_detail': '{2}: \'{0}\' doit être un nombre décimal signé consisting composé d\'un ou plusieurs chiffres, pouvant être suivi d\'un point ou d\'une fraction.  Exemple: {1}',
        'javax.faces.converter.BigIntegerConverter.BIGINTEGER': '{2}: \'{0}\' doit est un nombre composé d\'un ou plusieurs chiffres.',
        'javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail': '{2}: \'{0}\' doit est un nombre composé d\'un ou plusieurs chiffres. Exemple: {1}',
        'javax.faces.converter.ByteConverter.BYTE': '{2}: \'{0}\' doit être un nombre entre 0 et 255.',
        'javax.faces.converter.ByteConverter.BYTE_detail': '{2}: \'{0}\' doit être un nombre entre 0 et 255.  Exemple: {1}',
        'javax.faces.converter.CharacterConverter.CHARACTER': '{1}: \'{0}\' doit être un caractère valide.',
        'javax.faces.converter.CharacterConverter.CHARACTER_detail': '{1}: \'{0}\' doit être un caractère ASCII valide.',
        'javax.faces.converter.ShortConverter.SHORT': '{2}: \'{0}\' doit est un nombre composé d\'un ou plusieurs chiffres.',
        'javax.faces.converter.ShortConverter.SHORT_detail': '{2}: \'{0}\' doit être un nombre entre -32768 and 32767 Exemple: {1}',
        'javax.faces.converter.BooleanConverter.BOOLEAN': '{1}: \'{0}\' doit être \'vrai\' ou \'faux\'',
        'javax.faces.converter.BooleanConverter.BOOLEAN_detail': '{1}: \'{0}\' doit être \'vrai\' ou \'faux\'.  Toute autre valeur différente de \'vrai\' sera évaluée en tant que \'faux\'.',
        'javax.faces.validator.LongRangeValidator.MAXIMUM': '{1}: La valeur est supérieure au maximum autorisé de \'{0}\'',
        'javax.faces.validator.LongRangeValidator.MINIMUM': '{1}: La valeur est inférieure au minimum autorisé de \'{0}\'',
        'javax.faces.validator.LongRangeValidator.NOT_IN_RANGE': '{2}: La valeur indiquée n\'est pas dans l\'intervalle prévu, entre {0} et {1}.',
        'javax.faces.validator.LongRangeValidator.TYPE={0}': 'La valeur n\'est pas du bon type.',
        'javax.faces.validator.DoubleRangeValidator.MAXIMUM': '{1}: La valeur est supérieure au maximum autorisé de \'{0}\'',
        'javax.faces.validator.DoubleRangeValidator.MINIMUM': '{1}: La valeur est inférieure au minimum autorisé de \'{0}\'',
        'javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE': '{2}: La valeur indiquée n\'est pas dans l\'intervalle prévu, entre {0} et {1}',
        'javax.faces.validator.DoubleRangeValidator.TYPE={0}': 'La valeur n\'est pas du bon type',
        'javax.faces.converter.FloatConverter.FLOAT': '{2}: \'{0}\' doit est un nombre composé d\'un ou plusieurs chiffres.',
        'javax.faces.converter.FloatConverter.FLOAT_detail': '{2}: \'{0}\' doit être un nombre entre 1.4E-45 and 3.4028235E38  Exemple: {1}',
        'javax.faces.converter.DateTimeConverter.DATE': '{2}: \'{0}\' ne peut être interprété comme une date.',
        'javax.faces.converter.DateTimeConverter.DATE_detail': '{2}: \'{0}\' ne peut être interprété comme une date. Exemple: {1}',
        'javax.faces.converter.DateTimeConverter.TIME': '{2}: \'{0}\' ne peut être interprété comme un temps.',
        'javax.faces.converter.DateTimeConverter.TIME_detail': '{2}: \'{0}\' ne peut être interprété comme un temps. Exemple: {1}',
        'javax.faces.converter.DateTimeConverter.DATETIME': '{2}: \'{0}\' ne peut être interprété comme une date and time.',
        'javax.faces.converter.DateTimeConverter.DATETIME_detail': '{2}: \'{0}\' ne peut être interprété comme une date and time. Exemple: {1}',
        'javax.faces.converter.DateTimeConverter.PATTERN_TYPE': '{1}: Un attribut \'pattern\' ou \'type\' doit être spécifié pour convertir la valeur \'{0}\'',
        'javax.faces.converter.NumberConverter.CURRENCY': '{2}: \'{0}\' ne peut être interprété comme une devise.',
        'javax.faces.converter.NumberConverter.CURRENCY_detail': '{2}: \'{0}\' ne peut être interprété comme une devise. Exemple: {1}',
        'javax.faces.converter.NumberConverter.PERCENT': '{2}: \'{0}\' ne peut être interprété comme un pourcentage.',
        'javax.faces.converter.NumberConverter.PERCENT_detail': '{2}: \'{0}\' ne peut être interprété comme un pourcentage. Exemple: {1}',
        'javax.faces.converter.NumberConverter.NUMBER': '{2}: \'{0}\' ne peut être interprété comme une date.',
        'javax.faces.converter.NumberConverter.NUMBER_detail': '{2}: \'{0}\' n\'est pas un nombre. Exemple: {1}',
        'javax.faces.converter.NumberConverter.PATTERN': '{2}: \'{0}\' n\'est pas un motif de nombre.',
        'javax.faces.converter.NumberConverter.PATTERN_detail': '{2}: \'{0}\' n\'est pas un motif de nombre. Exemple: {1}',
        'javax.faces.validator.LengthValidator.MINIMUM': '{1}: La longueur est inférieure au minimum autorisé de \'{0}\'',
        'javax.faces.validator.LengthValidator.MAXIMUM': '{1}: La longueur est supérieure au maximum autorisé de \'{0}\'',
        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET': 'Regex pattern must be set.',
        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail': 'Regex pattern must be set to non-empty value.',
        'javax.faces.validator.RegexValidator.NOT_MATCHED': 'Regex Pattern not matched',
        'javax.faces.validator.RegexValidator.NOT_MATCHED_detail': 'Regex pattern of \'{0}\' not matched',
        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION': 'Erreur dans l\'expression régulière.',
        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail': 'Erreur dans l\'expression régulière, \'{0}\''
    }
};

PrimeFaces.locales ['fr_FR'] = PrimeFaces.locales ['fr'];