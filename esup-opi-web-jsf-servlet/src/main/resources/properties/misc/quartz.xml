<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	

	<!--<bean name="inscriptionOuverte" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="fr.univ.rennes1.cri.opiR1.batch.InscriptionOuverte" />
		<property name="jobDataAsMap">
			<map>
				<entry key="domainService" value-ref="domainServiceJob" />
				<entry key="dateOuvertureReins" value="${dateOuverture.reins}" />
				<entry key="dateOuverturePrimo" value="${dateOuverture.primo}" />
			</map>
		</property>
	</bean>
	-->
	<bean name="archiveTaskBatch" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="fr.univ.rennes1.cri.opiR1.batch.ArchiveTaskBatch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="regimeInscriptions">
					<list>
						<ref bean="formationContinue"/>
						<ref bean="formationInitiale"/>
					</list>
				</entry>
			</map>
		</property>
	</bean>

	<!--<bean id="cronInscriptionOuverte" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="inscriptionOuverte" />
		 Exécution toute les 3 secondes 
		<property name="cronExpression" value="${cron.inscription}" />
	</bean>-->

	<bean id="cronArchiveTasks" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="archiveTaskBatch" />
		 <!-- Exécution à minuit et demi -->
		<property name="cronExpression" value="${cron.archiveTask}" />
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<!--<ref bean="cronCleanUp" />
				<ref bean="cronInscriptionOuverte" />-->
				<ref bean="cronArchiveTasks"/>
			</list>
		</property>
<!--		<property name="schedulerContextAsMap">-->
<!--			<map>-->
<!--				<entry key="daoService">-->
<!--					<ref bean="daoService" />-->
<!--				</entry>-->
<!--			</map>-->
<!--		</property>-->
	</bean>

	<!--<bean id="transactionManager" parent="hibernateSessionFactoryContainer"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<description>
			The transaction manager, in charge of committing/rolling
			back transactions.
		</description>
	</bean>

	<bean id="domainServiceJob"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<description>
			This bean is proxying the DAO service for the domain
			service.
		</description>
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="domainService" />
		<property name="transactionAttributes">
			<props>
				<prop key="getVoeuxAcceptes">
					PROPAGATION_REQUIRED,-OrderException
				</prop>
				<prop key="deleteIndividusSansVoeux">
					PROPAGATION_REQUIRED,-OrderException
				</prop>
			</props>
		</property>
	</bean>

	<bean id="parameterServiceJob"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<description>
			This bean is proxying the DAO service for the domain
			service.
		</description>
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="parameterService" />
		<property name="transactionAttributes">
			<props>
				<prop key="getCalendars">
					PROPAGATION_REQUIRED,-OrderException
				</prop>
			</props>
		</property>
	</bean>

--></beans>